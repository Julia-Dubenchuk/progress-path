name: CI

on:
  push:
    branches: [main, master, development]
  pull_request:
    branches: [main, master, development]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm run test
        env:
          HOST: localhost
          PORT: 3000
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
          NODE_ENV: test
          LOG_LEVEL: info
          auth0__domain: test_domain
          auth0__clientId: test_clientId
          auth0__clientSecret: test_clientSecret
          auth0__callbackUrl: http://localhost:3000/auth/auth0/callback
          JWT_SECRET: test_secret

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
